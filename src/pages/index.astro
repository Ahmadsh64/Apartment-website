---
import { supabase } from "../lib/supabaseServer.js";

const BUCKET = 'properties';
const FILE = 'properties.json';

// נקבל את public URL (בהנחה שהבקט ציבורי)
const { data: { publicUrl } } = supabase.storage.from(BUCKET).getPublicUrl(FILE);

// נושף מה־publicUrl בזמן בניית השרת (SSR / build)
let properties = [];
try {
  const res = await fetch(publicUrl);
  if (res.ok) properties = await res.json();
} catch (e) {
  properties = [];
}

const PUBLIC_JSON_URL = publicUrl;
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;
---
<html lang="he">
  <head>
    <meta charset="utf-8" />
    <title>כל הדירות</title>
  </head>
  <body>
    <h1>רשימת דירות</h1>

    <div id="list">
      {properties.map(p => (
        <article data-id={p.id}>
          <img src={p.image} alt={p.title} width="300" />
          <h2>{p.title}</h2>
          <p>מחיר: {p.price?.toLocaleString()} ₪</p>
          <p>{p.address}</p>
          <a href={`/property/${p.id}`}>פרטים</a>
        </article>
      ))}
    </div>

    <script type="module">
      // ברגע שדף נטען — נעשה שאילתה ל־JSON הציבורי מחדש כדי להציג עדכונים מיידיים (בלי לחכות ל־build)
      const PROPERTIES_URL = ${JSON.stringify(PUBLIC_JSON_URL)};
      async function refresh() {
        try {
          const res = await fetch(PROPERTIES_URL);
          if (!res.ok) return;
          const data = await res.json();
          const list = document.getElementById('list');
          list.innerHTML = '';
          for (const p of data) {
            const el = document.createElement('article');
            el.setAttribute('data-id', p.id);
            el.innerHTML = `
              <img src="${p.image}" alt="${p.title}" width="300" />
              <h2>${p.title}</h2>
              <p>מחיר: ${p.price?.toLocaleString()} ₪</p>
              <p>${p.address}</p>
              <a href="/property/${p.id}">פרטים</a>
            `;
            list.appendChild(el);
          }
        } catch (err) {
          console.warn('refresh failed', err);
        }
      }
      // רענון מיד ולפי צורך (אפשר להוסיף setInterval אם רוצים)
      refresh();
    </script>
  </body>
</html>
